name: "Terraform Workflow"

on:
  push:
    branches:
      - main
    paths:
      - 'Terraform/**'
  pull_request:
    paths:
      - 'Terraform/**'

permissions:
  id-token: write # This is required for requesting the JWT
  contents: write  # This is required for actions/checkout
  pull-requests: write

jobs:
  terraform:
    name: "Terraform Deployment!"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./Terraform
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt
        id: tf-fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform init
        id: tf-init
        run: terraform init

      - name: Terraform validate
        id: tf-validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: tf-plan
        run: terraform plan -no-color
        continue-on-error: true

      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.tf-plan.outputs.stdout }}"
        with:
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.tf-fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.tf-init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.tf-validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.tf-plan.outcome }}\`
  
            <details><summary>Show Plan</summary>
  
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
  
            </details>
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
  
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Apply
        id: tf-apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply --auto-approve -input=false

          

      