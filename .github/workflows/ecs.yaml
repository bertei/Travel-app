name: Deploy to AWS ECS

##This workflow triggers everytime website folder files are modified. Also can be manually run thanks to workflow_dispatch
on:
  push:
    branches: [ main ]
    paths:
      - 'app-295devops-travel/**'
  workflow_dispatch:

permissions:
  id-token: write # This is required for requesting the JWT
  contents: write  # This is required for actions/checkout
  pull-requests: write

jobs:
  ecs-deployment:
    name: ECS-Deployment
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./app-295devops-travel

    steps:
      - name: Checkout (copy repo to runner)
        uses: actions/checkout@v3

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to AWS ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.run_number }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Download task definition
        run: |
          cd ..
          aws ecs describe-task-definition --task-definition travelapp-taskdefintion --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: bernatei-website
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: travelapp-service
          cluster: travelapp-cluster
          wait-for-service-stability: true